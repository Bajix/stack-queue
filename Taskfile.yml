version: "3"

env:
  TARGET: x86_64-apple-darwin

tasks:
  default:
    cmds:
      - task: check-tests
      - task: check-loom
      - task: clippy-tests
      - task: test-address-sanitizer
      - task: test-loom

  doc:
    cmds:
      - cargo +nightly doc -p stack-queue --features diesel-associations --features redis-args --open
    env:
      RUSTDOCFLAGS: --cfg docsrs

  bench:
    env:
      RUSTFLAGS: -C target-cpu=native
    cmds:
      - cargo bench --profile release -p bencher

  bench-oneshot:
    env:
      RUSTFLAGS: -C target-cpu=native
      FILTER: Task/(?:receive|Tokio::sync::oneshot)
    cmds:
      - cargo bench --profile release -p bencher -- $FILTER

  bench-slim:
    env:
      RUSTFLAGS: -C target-cpu=native
      FILTER: Batching/(?:crossbeam|TaskQueue|BackgroundQueue)/16
    cmds:
      - cargo bench --profile release -p bencher -- $FILTER

  generate-bench-table:
    env:
      RUSTFLAGS: -C target-cpu=native
      FILTER: Batching/(?:crossbeam|flume|TaskQueue|tokio::mpsc)/16
    cmds:
      - cargo criterion --message-format=json -p bencher -- $FILTER | criterion-table

  flamegraph:
    env:
      RUSTFLAGS: -C target-cpu=native
      CARGO_PROFILE_BENCH_DEBUG: true
    cmds:
      - cargo flamegraph --bench benchmarks --root -p bencher -- stack_queue --bench

  test-miri:
    cmds:
      - cargo miri test -Z build-std -p stack-queue --target $TARGET -- --nocapture
    sources:
      - crates/stack-queue/**/*.rs
    env:
      MIRIFLAGS: -Zmiri-backtrace=full

  clippy-tests:
    cmds:
      - cargo clippy -p stack-queue --tests
    sources:
      - crates/stack-queue/**/*.rs

  check:
    cmds:
      - cargo check -p stack-queue --features redis-args --features diesel-associations
    sources:
      - crates/stack-queue/**/*.rs

  check-tests:
    cmds:
      - cargo check -p stack-queue --tests
    sources:
      - crates/stack-queue/**/*.rs

  check-loom:
    cmds:
      - cargo check -p stack-queue --tests
    sources:
      - crates/stack-queue/**/*.rs
    env:
      RUSTFLAGS: --cfg loom

  test-loom:
    cmds:
      - cargo test -Z build-std -p stack-queue --target $TARGET -- --nocapture
    sources:
      - crates/stack-queue/**/*.rs
    env:
      RUSTFLAGS: --cfg loom
      LOOM_MAX_PREEMPTIONS: 10

  test-sanitizer:
    cmds:
      - task: test-address-sanitizer
      - task: test-thread-sanitizer
      - task: test-leak-sanitizer

  test-address-sanitizer:
    cmds:
      - cargo test -Z build-std -p stack-queue --target $TARGET -- --nocapture
    sources:
      - crates/stack-queue/**/*.rs
    env:
      RUSTFLAGS: -C target-cpu=native -Z sanitizer=address

  test-thread-sanitizer:
    cmds:
      - cargo test -Z build-std -p stack-queue --target $TARGET -- --nocapture
    sources:
      - crates/stack-queue/**/*.rs
    env:
      RUSTFLAGS: -C target-cpu=native -Z sanitizer=thread

  test-leak-sanitizer:
    cmds:
      - cargo test -Z build-std -p stack-queue --target $TARGET -- --nocapture
    sources:
      - crates/stack-queue/**/*.rs
    env:
      RUSTFLAGS: -C target-cpu=native -Z sanitizer=leak
