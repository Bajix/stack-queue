[package]
authors = ["Thomas Sieverding <Thomas@bajix.com>"]
edition = "2021"
name = "stack-queue"
version = "0.4.0"
description = "Heapless auto-batching queue"
readme = "../../README.md"
license = "MIT"
repository = "https://github.com/Bajix/stack-queue/"

[dependencies]
async_t = "0.7"
async-local = { version = "1.1", features = ["tokio-runtime"] }
cache-padded = "1.2"
derive-stack-queue = { version = "0.4.0", path = "../derive-stack-queue" }
diesel = { version = "2", optional = true }
pin-project = "1"
redis = { version = "0.22", optional = true }
tokio = { version = "1", features = ["rt", "sync"] }

[dev-dependencies]
futures = "0.3"
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }

[target.'cfg(loom)'.dependencies]
futures-test = "0.3"
loom = { version = "0.5", features = ["futures"] }

[lib]
doctest = false
bench = false

[features]
default = []

# Downgrade async_t to async_trait::async_trait
boxed = ["async_t/boxed"]

# Tokio Runtime configured with a barrier-synchronized shutdown as to ensure tasks never outlive worker thread owned local data
barrier-protected-runtime = ["async-local/barrier-protected-runtime"]

# Implement `diesel::associations::BelongsTo` for `stack_queue::task::TaskRef`
diesel-associations = ["diesel"]

# Implement `redis::ToRedisArgs` for `stack_queue::task::TaskRef`
redis-args = ["redis"]

[package.metadata.docs.rs]
features = ["diesel-associations", "redis-args"]
all-features = false
rustdoc-args = ["--cfg", "docsrs"]
